receivers:
  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu: {}
      memory: {}
      disk: {}
      filesystem: {}
      network: {}
      load: {}

  syslog:
    udp:
      listen_address: 0.0.0.0:54525
    protocol: rfc5424
    operators:
      - type: move
        from: attributes.message
        to: body

  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317 #change to localhost

processors:

  transform:
    log_statements:
      - context: log

        statements:
          # --- DEBUG ---
          - set(severity_text, "DEBUG") where severity_text == "notice"
          - set(severity_text, "DEBUG") where severity_text == "trace"
          - set(severity_text, "DEBUG") where severity_text == "debug"
          - set(severity_text, "DEBUG") where severity_text == "DEBUG"

          # --- INFO ---
          - set(severity_text, "INFO") where severity_text == "info"
          - set(severity_text, "INFO") where severity_text == "INFO"
          - set(severity_text, "INFO") where severity_text == "SUCCESS"

          # --- WARNING ---
          - set(severity_text, "WARNING") where severity_text == "warn"
          - set(severity_text, "WARNING") where severity_text == "warning"
          - set(severity_text, "WARNING") where severity_text == "WARN"

          # --- ERROR ---
          - set(severity_text, "ERROR") where severity_text == "err"
          - set(severity_text, "ERROR") where severity_text == "error"

          # --- CRITICAL ---
          - set(severity_text, "CRITICAL") where severity_text == "crit"
          - set(severity_text, "CRITICAL") where severity_text == "fatal"
          - set(severity_text, "CRITICAL") where severity_text == "FATAL"
          - set(severity_text, "CRITICAL") where severity_text == "EXCEPTION"

          # --- Default Mapping (CRITICAL) ---
          - set(severity_text, "CRITICAL") where severity_text == ""


  batch:
    timeout: 30s
    send_batch_size: 50000

  resource/host:
    attributes:
      - key: host.name
        value: "giga"
        action: upsert

  resource/hostmetrics:
    attributes:
      - key: service.name
        value: "hostmetrics"
        action: upsert

  resource/syslog:
    attributes:
      - key: service.name
        value: "syslog"
        action: upsert

exporters:
  clickhouse:
    endpoint: tcp://localhost:9000
    database: otel
    username: default
    password: "${CLICKHOUSE_PASSWORD}"
    ttl: 336h
    compress: lz4
    timeout: 10s
    create_schema: false
    logs_table_name: otel_logs
    traces_table_name: otel_traces
    sending_queue:
      enabled: true
      num_consumers: 2
      queue_size: 1000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s

  telegram:
    enabled: true
    bot_token: "${TELEGRAM_BOT_TOKEN}"
    chat_id: "${TELEGRAM_CHAT_ID}"
    max_message_length: 4096
    batch_enabled: true    # Enable/disable batching functionality
    batch_timeout: 5s       # Time to wait before sending a batch
    batch_size: 10           # Number of messages to accumulate before sending
    # channels section to support message routing by severity or channel
    channels:
      - name: "ERROR"
        message_thread_id: 4
        severities: ["WARNING", "ERROR", "CRITICAL"]
      - name: "INFO"
        message_thread_id: -1
        severities: ["DEBUG", "INFO", "SUCCESS"]
      - name: "TRADE"
        message_thread_id: 2

  #debug:  # Use the debug exporter for detailed logging
    #verbosity: detailed

service:
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [batch, resource/host, resource/hostmetrics]
      exporters: [clickhouse]

    logs/syslog:
      receivers: [syslog]
      processors: [transform, batch, resource/host, resource/syslog]
      exporters: [clickhouse, telegram]

    logs/otlp:
      receivers: [otlp]
      processors: [transform, batch, resource/host]
      exporters: [clickhouse, telegram] #, debug

    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [clickhouse]

  telemetry:
    logs:
      level: "error"